#https://mogile.web.fc2.com/nginx_wiki/nginx_wiki201510/modules/sr_cache.html
#https://gist.github.com/ykst/52205d4d4968298137ea0050c4569170
upstream redis_cluster{
    server redis:6379;
    #server redis:6380;
    keepalive 32;
    keepalive_requests 500;
    keepalive_time 1h;
}


server {
    listen       80;
    server_name  localhost;

    #charset koi8-r;
    #access_log  /var/log/nginx/host.access.log  main;

    location / {
        root   /usr/local/openresty/nginx/html;
        index  index.html index.htm;
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/local/openresty/nginx/html;
    }

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           /usr/local/openresty/nginx/html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}

    # cache settings start
    set $cache_enabled 0;
    set $cache_clear 0;
    set $cache_method 0;#0:none, 1:get, 2:set
    if ( $request_method = POST ) {
        set $cache_enabled 1;
    }

    #/redis/$key
    if ( $request_uri ~* "/redis/([a-zA-Z0-9]+)$") {
        set $cache_enabled 1;
        set $key $1;
        set $cache_method 1;
    }

    #/redis/$key/$value
    if ( $request_uri ~* "/redis/([a-zA-Z0-9]+)/(.+)") {
        set $cache_enabled 1;
        set $key $1;
        set $value $2;
        set $cache_method 2;
    }

    # cache settings end

    #public networkに晒す時は以下忘れずに
    proxy_set_header Accept-Encoding "";
    proxy_ignore_headers Cache-Control;
    proxy_ignore_headers Set-Cookie;
    proxy_ignore_headers X-Accel-Expires;
    proxy_ignore_headers Expires;

    proxy_redirect   off;

    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-Server $host;
    proxy_set_header X-Forwarded-Proto $scheme;

    #redis
    location /redis-store {
        internal;
        set_unescape_uri $exptime $arg_exptime;
        set_unescape_uri $key $arg_key;
        set_md5 $key;
        redis2_query set $host:$key $echo_request_body;
        redis2_query expire $host:$key $exptime;
        #redis2_pass redis;
    }
    location /redis-get {
        internal;
        set_md5 $key $args;
        set $redis_key $host:$key;
        #redis_pass redis;
    }

    #/say
    location /say {
        content_by_lua_block {
            ngx.say("hello, world!")
        }
    }


    location /redis {

        resolver 127.0.0.11 valid=2s;#docker networkからコンテナ名でip引く場合のみ、resolverの設定が必要

        access_by_lua_block {
            ngx.log(ngx.INFO, "Lua block in...")
            if ( ngx.var.cache_enabled == 0) then
                return
            end

            local redis_mod = require "resty.redis"
            local redis = redis_mod:new()
            --[[ 
                dockerだとping redis と打って出たipを指定するしか、resolverを設定するか
                https://github.com/openresty/lua-resty-core/issues/45
            ]]
            local ok, err = redis:connect("redis", 6379)
            --local ok, err = redis:connect("192.168.32.4", 6379)
            if not ok then
                ngx.log( ngx.ALERT, "Failed to connect:", err)
                return
            else
                ngx.log( ngx.CRIT, "Redis connection:", ok)
            end

            redis:close()

        }

        redis2_pass redis:6379;
        if ( $cache_enabled ) {
            add_header X-Cache-Key $key;
            add_header X-Cache-Value $value;
        }

        if ( $cache_method = 1 ) {
            redis2_query get $key;
            add_header X-Cache-Get $key:$value;
        }
        if ( $cache_method = 2 ) {
            redis2_query set $key $value;
            add_header X-Cache-Set $key:$value;
        }

        try_files $uri =404;
    }

}
